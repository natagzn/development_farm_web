// App.tsx
import { useEffect, useState } from "react";
import "./App.css";
import { TonWalletConnect } from "./components/TonWalletConnect";

// @ts-ignore
const tg = window.Telegram?.WebApp;

function App() {
  const [telegramUser, setTelegramUser] = useState<any>(null);
  const [serverMessage, setServerMessage] = useState<string>("");

  useEffect(() => {
    if (tg?.initDataUnsafe?.user) {
      setTelegramUser(tg.initDataUnsafe.user);
    }

    tg?.ready();
    tg?.expand();
  }, []);

  const fetchProtected = async () => {
  const token = localStorage.getItem("auth_token");
  try {
    const res = await fetch("http://localhost:3001/auth/me", {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    });

    const data = await res.json();
    console.log("–ó–∞—Ö–∏—â–µ–Ω—ñ –¥–∞–Ω—ñ:", data);
setServerMessage("–ó–∞—Ö–∏—â–µ–Ω—ñ –¥–∞–Ω—ñ: " + JSON.stringify(data, null, 2));

  } catch (err) {
    console.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞—Ö–∏—â–µ–Ω—ñ –¥–∞–Ω—ñ:", err);
    setServerMessage("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑‚Äô—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º");
  }
};

  return (
    <div className="App">
      <h1>–ü—Ä–∏–≤—ñ—Ç, {telegramUser?.first_name || "–Ω–µ–≤—ñ–¥–æ–º–∏–π"} üëã</h1>

      <h1>–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ TON Wallet</h1>
      <TonWalletConnect telegramUser={telegramUser} />

      <hr />
      <button onClick={fetchProtected}>me</button>
       {serverMessage && (
        <p>
          <strong>–°–µ—Ä–≤–µ—Ä –≤—ñ–¥–ø–æ–≤—ñ–≤:</strong> {serverMessage}
        </p>
      )}

    </div>
  );
}

export default App;
